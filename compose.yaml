version: '3.5' # up-to-date
services: 
  db:
    image: postgres
    container_name: postgres-db-2024
    restart: always
    environment: 
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - db_network_2024
    ports: 
      - "${POSTGRES_PORT}:5432"
  nestjs:
    image: nestjs-rest-service-2024
    container_name: nest-rest-service-2024
    build: 
      context: .
      dockerfile: ./Dockerfile
    restart: always
    env_file:
      - .env
    environment: 
      - DB_TYPE=${DB_TYPE}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports: 
      - "${PORT}:${PORT}" # expose-to-the-world : only-in-the-docker
    depends_on: 
      - db
    networks:
      - db_network_2024
    volumes: 
      - .:/usr/app/
      - node_modules:/usr/app/node_modules
      - migrations:/usr/app/migrations 
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4-2024
    restart: always
    environment: 
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports: 
      - "8080:80"
    volumes: 
      - pgadmin-data:/var/lib/pgadmin
    depends_on: 
      - db
    networks:
      - db_network_2024
volumes:
  pgdata:
  pgadmin-data:
  migrations:
  node_modules:
networks:
  db_network_2024:
    driver: bridge